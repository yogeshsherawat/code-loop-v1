{"version":3,"sources":["components/Editor.js","App.js","reportWebVitals.js","index.js"],"names":["Editor","props","useState","iscodeThemeDark","setIsCodeThemeDark","isCompiling","setisCompiling","apiError","setApiError","input","setInput","lang","setLang","code","setCode","codeOutput","setCodeOutput","home_page_url","handleClick","a","dataString","axios","post","response","data","console","log","status","output","time","code_area","useRef","className","onClick","current","style","backgroundColor","color","ref","onChange","e","target","value","placeholder","borderColor","marginTop","marginBottom","position","bottom","FacebookShareButton","url","quote","FacebookIcon","size","round","WhatsappShareButton","title","separator","WhatsappIcon","TwitterShareButton","TwitterIcon","readOnly","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8d3e43e9.chunk.js","sourcesContent":["import React, { Fragment, useState, useRef } from 'react';\r\nimport axios from 'axios';\r\nimport { FacebookShareButton, WhatsappShareButton, TwitterShareButton } from 'react-share';\r\nimport { FacebookIcon, WhatsappIcon, TwitterIcon } from 'react-share';\r\n\r\nconst Editor = (props) => {\r\n\r\n    const [iscodeThemeDark, setIsCodeThemeDark] = useState('false');\r\n\r\n    const [isCompiling, setisCompiling] = useState(false);\r\n\r\n    const [apiError, setApiError] = useState(false);\r\n\r\n    const [input, setInput] = useState('');\r\n\r\n    const [lang, setLang] = useState('PYTHON3');\r\n\r\n    const { code, setCode, codeOutput, setCodeOutput } = props;\r\n\r\n    let home_page_url = 'https://codeloopversion1.herokuapp.com/';\r\n\r\n    const handleChange = (e) => {\r\n        setCode(e.target.value);\r\n    }\r\n    const handleInputChange = (e) => {\r\n        setInput(e.target.value);\r\n    }\r\n    const JavaBtn = () => {\r\n        setLang('JAVA');\r\n    }\r\n    const java8Btn = () => {\r\n        setLang('JAVA8');\r\n    }\r\n    const Python3Btn = () => {\r\n        setLang('PYTHON3');\r\n    }\r\n    const PythonBtn = () => {\r\n        setLang('PYTHON');\r\n    }\r\n    const cppBtn = () => {\r\n        setLang('CPP');\r\n    }\r\n    const cpp11Btn = () => {\r\n        setLang('CPP11');\r\n    }\r\n    const cpp14Btn = () => {\r\n        setLang('CPP14');\r\n    }\r\n\r\n\r\n\r\n\r\n    const handleClick = async () => {\r\n        \r\n\r\n        try {\r\n\r\n            let callback = 'https://codeloopversion1herokuapp.com/callback'\r\n            let dataString = {\r\n                'source': code,\r\n                'lang': lang,\r\n                'time_limit': 5,\r\n                'memory_limit': 246323,\r\n                'input': input,\r\n                'callback': callback,\r\n                'id': \"12347837\"\r\n            }\r\n            setApiError(false);\r\n            setisCompiling(true);\r\n            let response = await axios.post('/compile',dataString);\r\n            let data = response.data;\r\n            console.log(data);\r\n            if (data.status === 'API Error')\r\n                setApiError(true);\r\n            await console.log(codeOutput);\r\n            setCodeOutput({\r\n                output: data.output,\r\n                time: data.time,\r\n                status : data.status\r\n            })\r\n            await console.log(codeOutput);\r\n            setisCompiling(false);\r\n            \r\n        }\r\n        catch (error) {\r\n            console.log(error);\r\n            setisCompiling(false);\r\n            setApiError(true);\r\n        }\r\n\r\n    }\r\n\r\n    const code_area = useRef(null);\r\n\r\n    const handleCodeTheme = () => {\r\n        setIsCodeThemeDark(!iscodeThemeDark);\r\n        if (iscodeThemeDark) {\r\n\r\n            code_area.current.style.backgroundColor = 'black';\r\n            code_area.current.style.color = 'white';\r\n\r\n        }\r\n        else {\r\n            code_area.current.style.backgroundColor = 'white';\r\n            code_area.current.style.color = 'black';\r\n\r\n        }\r\n    }\r\n\r\n\r\n    return (<Fragment>\r\n        <h1 className='ml-5 pt-2 txtColor-white'><i><span className='txtColor-orange'>Code</span>Loop</i></h1>\r\n\r\n\r\n        <div className='row'>\r\n            <div className=\"col-sm-12 col-md-8\">\r\n                <div className='container'>\r\n                    <h3 className='text-center txtColor-white'><i><span className='txtColor-orange'>{lang} </span> Editor</i></h3>\r\n                    <button\r\n                        className='btn btn-outline-primary'\r\n                        onClick={JavaBtn}>\r\n                        Java\r\n            </button>\r\n                    <button\r\n                        className='btn btn-outline-primary ml-2'\r\n                        onClick={java8Btn}>\r\n                        Java 8\r\n            </button>\r\n                    <button\r\n                        className='btn btn-outline-danger ml-2'\r\n                        onClick={PythonBtn}>\r\n                        PYTHON\r\n            </button>\r\n                    <button\r\n                        className='btn btn-outline-danger ml-2'\r\n                        onClick={Python3Btn}>\r\n                        PYTHON 3\r\n            </button>\r\n                    <button\r\n                        className='btn btn-outline-warning ml-2'\r\n                        onClick={cppBtn}>\r\n                        C++\r\n            </button>\r\n                    <button\r\n                        className='btn btn-outline-warning ml-2'\r\n                        onClick={cpp11Btn}>\r\n                        C++11\r\n            </button>\r\n                    <button\r\n                        className='btn btn-outline-warning ml-2'\r\n                        onClick={cpp14Btn}>\r\n                        C++14\r\n            </button>\r\n                    <button\r\n                        className='btn btn-light float-right'\r\n                        onClick={handleCodeTheme}>\r\n                        {iscodeThemeDark ? 'Dark' : 'Light'}\r\n                    </button>\r\n\r\n                    <textarea\r\n                        ref={code_area}\r\n                        className='codeArea mt-3 pt-2 pl-2 '\r\n                        onChange={handleChange}\r\n                        value={code} placeholder=\"Enter Code Here\" >\r\n                    </textarea>\r\n                    <button\r\n                        className='btn btn-primary '\r\n                        style={{ backgroundColor: '#ffb84d', borderColor: 'black', color: 'black', marginTop: '10px', marginBottom: '42px' }}\r\n\r\n                        onClick={handleClick}>\r\n                        Compile & Run\r\n            </button>\r\n                    {isCompiling === true && <i className='txtColor-orange ml-4' style={{ position: 'relative', bottom: '10px' }}>Compiling...</i>}\r\n                    {apiError === true && <i className='txtColor-red ml-4' style={{ position: 'relative', bottom: '10px' }}>API Error</i>}\r\n                    <div className='float-right mt-2'>\r\n\r\n                        <FacebookShareButton\r\n                            url={home_page_url}\r\n                            quote={code} >\r\n                            <FacebookIcon\r\n                                size={40} round={true} />\r\n\r\n                        </FacebookShareButton>\r\n                        <WhatsappShareButton className='ml-2'\r\n                            title={code}\r\n                            url={home_page_url} separator=\"\r\nURL: \">\r\n                            <WhatsappIcon size={40} round={true} />\r\n\r\n                        </WhatsappShareButton>\r\n\r\n                        <TwitterShareButton\r\n                            className='ml-2'\r\n                            title={code}\r\n                            url={home_page_url}\r\n                        >\r\n                            <TwitterIcon size={40} round={true} />\r\n                        </TwitterShareButton>\r\n                    </div>\r\n\r\n                </div>\r\n            </div>\r\n            <div className=\"col-sm-12 col-md-4\">\r\n\r\n                <div className=\" txtColor-white ml-5 mt-5 mr-2\" >\r\n                    <textarea\r\n                        className='pt-2 pl-2  io-border'\r\n                        onChange={handleInputChange}\r\n                        value={input}\r\n                        placeholder='Enter Input Here'>\r\n                    </textarea>\r\n                    <h1 className='txtColor-orange ml-5'>\r\n                        Output:\r\n            </h1>\r\n\r\n                    <span className='txtColor-orange'\r\n                    >Result:</span>{codeOutput.status}\r\n                    <br />\r\n                    <span className='txtColor-orange'>\r\n                        Execution Time:</span>{codeOutput.time}\r\n                    <br />\r\n                    <span className='txtColor-orange' >\r\n                        Output Console:\r\n                </span><br />\r\n                    <textarea\r\n                        className=\"mt-2 io-border\"\r\n                        value={codeOutput.output}\r\n\r\n                        readOnly>\r\n\r\n                    </textarea>\r\n                </div>\r\n            </div>\r\n\r\n\r\n        </div>\r\n\r\n    </Fragment>\r\n    );\r\n\r\n}\r\n\r\nexport default Editor;","import React, { useState } from 'react';\nimport \"./app.css\";\nimport Editor from './components/Editor';\n\nfunction App() {\n\n  const [code, setCode] = useState(\"\");\n\n  const [codeOutput, setCodeOutput] = useState({\n    status: '',\n    output: '',\n    time: ''\n  })\n\n  return (\n    <div style={{ backgroundColor: 'black' ,  }}>\n      <Editor code={code} setCode={setCode} codeOutput={codeOutput} setCodeOutput={setCodeOutput} />\n    </div>\n  );\n}\n\n\n\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n//import 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}